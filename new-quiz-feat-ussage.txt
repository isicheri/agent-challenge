// Start quiz
const startQuiz = async (quizId: string, userId: string) => {
  const response = await fetch(`/api/quiz/${quizId}/start`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ userId }),
  });
  
  const { attempt } = await response.json();
  return attempt;
};

// Submit quiz
const submitQuiz = async (
  quizId: string,
  attemptId: string,
  answers: Array<{ questionId: string; selectedOptionId: string | null }>,
  timeTaken: number
) => {
  const response = await fetch(`/api/quiz/${quizId}/submit`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ attemptId, answers, timeTaken }),
  });
  
  const result = await response.json();
  return result;
};

// Get results
const getResults = async (attemptId: string) => {
  const response = await fetch(`/api/quiz/attempts/${attemptId}`);
  const { attempt } = await response.json();
  return attempt;
};

// Get user history
const getHistory = async (userId: string) => {
  const response = await fetch(`/api/users/${userId}/quiz-history`);
  const { attempts, stats } = await response.json();
  return { attempts, stats };
};

// Get ALL quiz attempts (completed + incomplete)
const getAllHistory = async (userId: string) => {
  const response = await fetch(`/api/users/${userId}/quiz-history`);
  const { attempts, completed, incomplete, stats } = await response.json();
  return { attempts, completed, incomplete, stats };
};

// Get only COMPLETED quizzes
const getCompletedHistory = async (userId: string) => {
  const response = await fetch(`/api/users/${userId}/quiz-history?status=completed`);
  const { attempts, stats } = await response.json();
  return { attempts, stats };
};

// Get only INCOMPLETE quizzes (started but not finished)
const getIncompleteHistory = async (userId: string) => {
  const response = await fetch(`/api/users/${userId}/quiz-history?status=incomplete`);
  const { attempts } = await response.json();
  return { attempts };
};

Features you now have:
✅ Track quiz attempts - Start time, completion time, time taken
✅ Store user answers - Each answer saved with correct/incorrect flag
✅ Calculate scores - Automatic scoring with percentage
✅ Quiz history - See all past attempts
✅ Stats dashboard - Average score, best score, total attempts
✅ resume attempt 
✅ Review mode - Show correct answers after submission
✅ Skip questions - Handle unanswered questions
Want me to help with the UI components next? 🚀

```

---

## UI Ideas:

**Quiz History Page could show:**
```
📊 Your Quiz History

Stats:
- Total Quizzes: 5
- Completed: 3
- In Progress: 2
- Average Score: 82%
- Best Score: 95%

✅ Completed Quizzes:
┌─────────────────────────────────────┐
│ Quiz: Introduction to Sets          │
│ Score: 7/8 (87.5%) ✅ PASSED        │
│ Time: 15 min                        │
│ Completed: Oct 31, 2025             │
│ [View Results]                      │
└─────────────────────────────────────┘

⏳ In Progress:
┌─────────────────────────────────────┐
│ Quiz: Advanced Set Theory           │
│ Started: Oct 31, 2025               │
│ Progress: 0/10 questions            │
│ [Resume Quiz]                       │
└─────────────────────────────────────┘